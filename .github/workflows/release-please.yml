name: Release and Cleanup

permissions:
  id-token: write
  contents: write
  pull-requests: write

on:
  push:
    branches: 
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Add this step to checkout the code

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2 
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-duration-seconds: 900
          role-session-name: ${{ github.run_id }}

      - name: Get and Process GitHub PAT from AWS Secrets Manager
        run: |
          SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id github/release-please/pat --query SecretString --output text)

          if [[ $SECRET_VALUE == *"GITHUB_TOKEN"* ]]; then
            CLEANED_TOKEN=$(echo $SECRET_VALUE | jq -r '.GITHUB_TOKEN')
          else
            CLEANED_TOKEN=$SECRET_VALUE
          fi
          
          echo "GITHUB_TOKEN=$CLEANED_TOKEN" >> $GITHUB_ENV
          
          echo "Token length: ${#CLEANED_TOKEN}"

      - name: Test GitHub Token
        run: |
          # Test if the token works with GitHub API
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user)
          
          if [ $HTTP_STATUS -eq 200 ]; then
            echo "GitHub token validated successfully"
          else
            echo "GitHub token validation failed with status: $HTTP_STATUS"
            exit 1
          fi

      - uses: googleapis/release-please-action@v4
        with:
          release-type: node
          token: ${{ env.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json